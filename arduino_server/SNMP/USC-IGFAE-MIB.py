# PySNMP SMI module. Autogenerated from smidump -f python USC-IGFAE-MIB
# by libsmi2pysnmp-0.1.3 at Sat Jan  4 07:25:55 2014,
# Python version sys.version_info(major=2, minor=7, micro=6, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( MibScalar, MibTable, MibTableRow, MibTableColumn, ) = mibBuilder.importSymbols("RFC-1212", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
( NotificationType, ) = mibBuilder.importSymbols("RFC-1215", "NotificationType")
( enterprises, ) = mibBuilder.importSymbols("RFC1155-SMI", "enterprises")
( Bits, Integer32, MibIdentifier, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "MibIdentifier", "TimeTicks")


# Objects

rediris = MibIdentifier(enterprises.name + (7547,))
centrosiris = MibIdentifier(rediris.name + (1,))
usc = MibIdentifier(centrosiris.name + ( 23, ))
igfae = MibIdentifier(usc.name + (2,))
environment = MibIdentifier(igfae.name + (1,))
traps = MibIdentifier(igfae.name + (2,))

roomTemp = MibScalar(environment.name + (1,), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts:
  roomTemp.setDescription("Ambient room temperature.")

# Augmentions

# Notifications

temperatureCritical = NotificationType(traps.name + (1,)).setObjects(*(("USC-IGFAE-MIB", "roomTemp"), ) )
if mibBuilder.loadTexts: 
  temperatureCritical.setDescription("SEVERE: the Temperature has reached a critical value.")

temperatureOK = NotificationType(traps.name + (2,)).setObjects(*(("USC-IGFAE-MIB", "roomTemp"), ) )
if mibBuilder.loadTexts: 
  temperatureOK.setDescription("INFORMATIONAL: The temperature has returned to normal values.")

# Exports

# Objects
mibBuilder.exportSymbols("USC-IGFAE-MIB", rediris=rediris, centrosiris=centrosiris, usc=usc, igfae=igfae, environment=environment, traps=traps, roomTemp=roomTemp)

# Notifications
mibBuilder.exportSymbols("USC-IGFAE-MIB", temperatureCritical=temperatureCritical, temperatureOK=temperatureOK)

